name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ main ]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: your-cluster-name   # put your cluster name here
  GKE_ZONE: your-cluster-zone      # put your cluster zone here
  IMAGE: gcr.io/${{ secrets.GKE_PROJECT }}/your-app-name  # put your app name here

jobs:
  # security-check:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
      
  #     - name: Run Anchore Container Scan
  #       uses: anchore/scan-action@v3
  #       with:
  #         dockerfile-path: './dockerfile'

  # quality-check:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
      
  #     - name: Run ESLint
  #       uses: wagoid/commitlint-github-action@v3

  build-and-deploy:
    # needs: [security-check, quality-check]
    runs-on: ubuntu-latest
    steps:
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:latest
        env:
          SECRET_KEY_1: ${{ secrets.SECRET_KEY_1 }}
          SECRET_KEY_2: ${{ secrets.SECRET_KEY_2 }}
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:latest

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true

      - name: Deploy to GKE
        uses: google-github-actions/deploy-gke@v0.2.0
        with:
          credentials: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          manifest: deployment.yaml
          images: ${{ env.IMAGE }}=${{ env.IMAGE }}:latest